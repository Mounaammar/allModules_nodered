"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RssFeedRead = void 0;
const n8n_workflow_1 = require("n8n-workflow");
const Parser = require("rss-parser");
class RssFeedRead {
    constructor() {
        this.description = {
            displayName: 'RSS Read',
            name: 'rssFeedRead',
            icon: 'fa:rss',
            group: ['input'],
            version: 1,
            description: 'Reads data from an RSS Feed',
            defaults: {
                name: 'RSS Feed Read',
                color: '#b02020',
            },
            inputs: ['main'],
            outputs: ['main'],
            properties: [
                {
                    displayName: 'URL',
                    name: 'url',
                    type: 'string',
                    default: '',
                    required: true,
                    description: 'URL of the RSS feed.',
                },
            ],
        };
    }
    async execute() {
        const url = this.getNodeParameter('url', 0);
        if (!url) {
            throw new n8n_workflow_1.NodeOperationError(this.getNode(), 'The parameter "URL" has to be set!');
        }
        const parser = new Parser();
        let feed;
        try {
            feed = await parser.parseURL(url);
        }
        catch (error) {
            if (error.code === 'ECONNREFUSED') {
                throw new n8n_workflow_1.NodeOperationError(this.getNode(), `It was not possible to connect to the URL. Please make sure the URL "${url}" it is valid!`);
            }
            throw new n8n_workflow_1.NodeOperationError(this.getNode(), error);
        }
        const returnData = [];
        if (feed.items) {
            feed.items.forEach((item) => {
                returnData.push(item);
            });
        }
        return [this.helpers.returnJsonArray(returnData)];
    }
}
exports.RssFeedRead = RssFeedRead;
//# sourceMappingURL=RssFeedRead.node.js.map